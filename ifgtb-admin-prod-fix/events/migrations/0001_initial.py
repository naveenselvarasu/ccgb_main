# Generated by Django 3.1.6 on 2021-03-02 13:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import events.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('knowledgebase', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertisement_image', models.ImageField(max_length=1000, upload_to=events.models.get_advertisement_image_upload_destination)),
                ('link', models.URLField(blank=True, help_text='Prefix http://', null=True, verbose_name='Sponsor website')),
                ('publish_from', models.DateTimeField(help_text="With Published chosen, won't be shown until this time", verbose_name='Published from')),
                ('expires_on', models.DateTimeField(help_text="With Published chosen, won't be shown after this time", verbose_name='Expires on')),
                ('is_active', models.BooleanField(default=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=25, null=True)),
                ('notes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('journal', models.CharField(blank=True, max_length=30, null=True)),
                ('news_link', models.URLField(help_text='Prefix http://', verbose_name='News website')),
                ('publish_from', models.DateTimeField(help_text="With Published chosen, won't be shown until this time", verbose_name='Published from')),
                ('expires_on', models.DateTimeField(help_text="With Published chosen, won't be shown after this time", verbose_name='Expires on')),
                ('app_alert', models.BooleanField(default=False)),
                ('language', models.CharField(max_length=50)),
                ('available_for_guest', models.BooleanField(default=False)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the Event', max_length=200)),
                ('description', models.TextField()),
                ('event_image', models.ImageField(blank=True, max_length=1000, null=True, upload_to=events.models.get_event_image_upload_destination)),
                ('link', models.URLField(blank=True, help_text='Prefix http://', null=True, verbose_name='Event website')),
                ('is_free', models.BooleanField(default=False, verbose_name='Free Event')),
                ('all_day', models.BooleanField(default=False)),
                ('date_from', models.DateField(verbose_name='From')),
                ('date_to', models.DateField(verbose_name='To')),
                ('time_from', models.TimeField(verbose_name='Time Starts on')),
                ('time_to', models.TimeField(verbose_name='Time Ends on')),
                ('contact_person', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Person')),
                ('contact_number', models.CharField(blank=True, max_length=13, null=True, verbose_name='Number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('publish_from', models.DateTimeField(help_text="With Published chosen, won't be shown until this time", verbose_name='Published from')),
                ('expires_on', models.DateTimeField(help_text="With Published chosen, won't be shown after this time", verbose_name='Expires on')),
                ('locality', models.CharField(blank=True, max_length=50, null=True, verbose_name='Village/Town name')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='city')),
                ('inter_city', models.CharField(blank=True, max_length=50, null=True, verbose_name='inter_city')),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=40, null=True)),
                ('longitude', models.CharField(blank=True, max_length=40, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(max_length=50)),
                ('login_required', models.BooleanField(default=False, help_text='If checked, only logged in users can view this page')),
                ('app_alert', models.BooleanField(default=False)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.district')),
                ('event_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.eventtype', verbose_name='Type of Event')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.state')),
                ('user_created', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created', to=settings.AUTH_USER_MODEL)),
                ('user_modified', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
