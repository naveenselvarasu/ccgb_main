# Generated by Django 3.1.5 on 2021-02-01 12:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='CasteCv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sowing_year', models.DateField()),
                ('area_in_hectare', models.DecimalField(decimal_places=3, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_harvested', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_on', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(max_length=1000)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CropCv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='CropGeoFence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_calculated_geo_fence_in_hectare', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('device_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('device_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.crop')),
            ],
        ),
        migrations.CreateModel(
            name='CropGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='CropGroupType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cropcv')),
            ],
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farmer_code', models.CharField(max_length=15, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('taluk', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('farm_holding_size_in_hectare', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('aadhaar_number', models.CharField(blank=True, max_length=18, null=True)),
                ('family_card_number', models.CharField(blank=True, max_length=18, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=16, null=True)),
                ('voter_card_epic_number', models.CharField(blank=True, max_length=16, null=True)),
                ('profile_complete', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_on', models.DateTimeField(blank=True, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.block')),
                ('caste', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.castecv')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_created_by', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.district')),
            ],
        ),
        migrations.CreateModel(
            name='FarmerDataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('source_object_name', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=13, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=10)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('taluk', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.block')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.district')),
            ],
        ),
        migrations.CreateModel(
            name='Institute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='InstituteOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_head_office', models.BooleanField(default=False)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('taluk', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.block')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.district')),
                ('institute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.institute')),
            ],
        ),
        migrations.CreateModel(
            name='Land',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_in_hectare', models.DecimalField(decimal_places=3, max_digits=10)),
                ('village', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.farmer')),
            ],
        ),
        migrations.CreateModel(
            name='LandGeoFence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_calculated_geo_fence_in_hectare', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('device_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('device_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('data_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.farmerdatasource')),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.land')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Nursery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OperationCV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cropcv')),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=20)),
                ('mobile', models.CharField(max_length=13)),
                ('otp', models.CharField(max_length=30)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('short_name', models.CharField(max_length=200)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('source', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_geo_fence_needed', models.BooleanField(default=False)),
                ('is_geo_tag_needed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='WaterSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='WaterType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='WaterResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.farmer')),
                ('water_resource_data_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.farmerdatasource')),
                ('water_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.watersource')),
                ('water_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.watertype')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.BigIntegerField(blank=True, null=True)),
                ('alternate_mobile', models.BigIntegerField(blank=True, null=True)),
                ('language_preference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.language')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.usertype')),
            ],
        ),
        migrations.CreateModel(
            name='Scientist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=30)),
                ('display_ordinal', models.PositiveBigIntegerField(default=0)),
                ('expertise', models.ManyToManyField(to='main.Expertise')),
                ('institute_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.instituteoffice')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='RevenueVillage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.block')),
            ],
        ),
        migrations.CreateModel(
            name='OperationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.crop')),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.operationcv')),
            ],
        ),
        migrations.CreateModel(
            name='NurseryOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_head_office', models.BooleanField(default=False)),
                ('village', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('taluk', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.block')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.district')),
                ('nursery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.nursery')),
                ('revenue_village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.revenuevillage')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.state')),
            ],
        ),
        migrations.CreateModel(
            name='NurseryIncharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_ordinal', models.PositiveBigIntegerField(default=0)),
                ('nursery_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.nurseryoffice')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='LandGeoTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('device_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('data_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.farmerdatasource')),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.land')),
            ],
        ),
        migrations.CreateModel(
            name='LandGeoFenceDataPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('timestamp', models.DateTimeField()),
                ('land_boundary_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.landgeofence')),
            ],
        ),
        migrations.AddField(
            model_name='land',
            name='revenue_village',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.revenuevillage'),
        ),
        migrations.AddField(
            model_name='instituteoffice',
            name='revenue_village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.revenuevillage'),
        ),
        migrations.AddField(
            model_name='instituteoffice',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.state'),
        ),
        migrations.CreateModel(
            name='IndustryOfficial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.industry')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='industry',
            name='revenue_village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.revenuevillage'),
        ),
        migrations.AddField(
            model_name='industry',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.state'),
        ),
        migrations.CreateModel(
            name='HarvestUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=10)),
                ('display_term', models.CharField(max_length=10)),
                ('instance_crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cropcv')),
            ],
        ),
        migrations.CreateModel(
            name='Harvest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.IntegerField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.crop')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.harvestunit')),
            ],
        ),
        migrations.CreateModel(
            name='FarmerSurveyNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_number', models.CharField(max_length=15)),
                ('sub_division_number', models.CharField(max_length=25)),
                ('patta_number', models.CharField(max_length=250)),
                ('land', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.land')),
            ],
        ),
        migrations.AddField(
            model_name='farmer',
            name='gender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.gender'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='farmer',
            name='revenue_village',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.revenuevillage'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.state'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='user_profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.userprofile'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ExpenseLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.crop')),
                ('expense_cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.expensecv')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.state'),
        ),
        migrations.CreateModel(
            name='CropSchemeMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.crop')),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.scheme')),
            ],
        ),
        migrations.CreateModel(
            name='CropGroupMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cropcv')),
                ('crop_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cropgroup')),
            ],
        ),
        migrations.AddField(
            model_name='cropgroup',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cropgrouptype'),
        ),
        migrations.CreateModel(
            name='CropGeoTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('device_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.crop')),
                ('data_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.farmerdatasource')),
            ],
        ),
        migrations.CreateModel(
            name='CropGeoFenceDataPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('timestamp', models.DateTimeField()),
                ('crop_boundary_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cropgeofence')),
            ],
        ),
        migrations.AddField(
            model_name='cropgeofence',
            name='data_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.farmerdatasource'),
        ),
        migrations.AddField(
            model_name='crop',
            name='crop_cv',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.cropcv'),
        ),
        migrations.AddField(
            model_name='crop',
            name='land',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.land'),
        ),
        migrations.AddField(
            model_name='crop',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='block',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.district'),
        ),
    ]
