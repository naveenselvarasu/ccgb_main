# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-03-19 07:31
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import instance.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('knowledgebase', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AfsClusterMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('assit_field_supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asst_field_supervisor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AfsFarmerMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgentFarmerMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgentOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.CharField(max_length=13)),
                ('address', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('shortname', models.CharField(max_length=50, unique=True)),
                ('url', models.URLField()),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('mobile', models.CharField(max_length=13)),
                ('pincode', models.IntegerField()),
                ('street', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('age_in_days', models.PositiveIntegerField()),
                ('notes', models.TextField(default='Some crop')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business')),
            ],
        ),
        migrations.CreateModel(
            name='CropCropGroupMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Crop')),
            ],
        ),
        migrations.CreateModel(
            name='CropGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('short_name', models.CharField(max_length=10)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business')),
            ],
        ),
        migrations.CreateModel(
            name='EducationalQualificationCv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('ordinal', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=15)),
                ('last_name', models.CharField(max_length=15)),
                ('farmer_code', models.CharField(max_length=15, unique=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile', models.CharField(max_length=13)),
                ('alternate_mobile', models.CharField(blank=True, max_length=13, null=True)),
                ('family_card_number', models.CharField(blank=True, max_length=18, null=True)),
                ('voter_card_epic_number', models.CharField(blank=True, max_length=16, null=True)),
                ('aadhaar_number', models.CharField(blank=True, max_length=18, null=True)),
                ('aadhaar_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_farmer_aadhar_document_destination)),
                ('pan_number', models.CharField(blank=True, max_length=16, null=True)),
                ('pan_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_farmer_pan_document_destination)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('farm_holding_size_in_acre', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('agreement_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_farmer_agreement_document_destination)),
                ('collaborated_with_company_on', models.DateField(blank=True, null=True)),
                ('profile_complete', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_future_farmer', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_on', models.DateTimeField(blank=True, null=True)),
                ('is_invited', models.BooleanField(default=False)),
                ('invited_on', models.DateTimeField(blank=True, null=True)),
                ('farmer_data_source_ref_id', models.PositiveIntegerField(default=0)),
                ('all_land_added', models.BooleanField(default=False)),
                ('all_land_verified', models.BooleanField(default=True)),
                ('all_land_verified_on', models.DateTimeField(blank=True, null=True)),
                ('all_water_added', models.BooleanField(default=False)),
                ('all_water_verified', models.BooleanField(default=True)),
                ('all_water_verified_on', models.DateTimeField(blank=True, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('all_land_verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='all_land_verified_by', to=settings.AUTH_USER_MODEL)),
                ('all_water_verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='all_water_verified_by', to=settings.AUTH_USER_MODEL)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business')),
                ('caste', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Caste')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Cluster')),
                ('communication_language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Language')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_created_by_instance', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.District')),
            ],
            options={
                'ordering': ['village'],
            },
        ),
        migrations.CreateModel(
            name='FarmerBankDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(max_length=150)),
                ('branch', models.CharField(max_length=100)),
                ('ifsc_code', models.CharField(max_length=100)),
                ('micr_code', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_passbook_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_farmer_bank_pass_book_document_destination)),
                ('account_holder_name', models.CharField(blank=True, max_length=50, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_bank_details_created_by', to=settings.AUTH_USER_MODEL)),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Farmer')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_bank_details_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FarmerDataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('source_object_name', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_mobile_number', models.CharField(blank=True, max_length=13, null=True)),
                ('notes', models.CharField(max_length=300)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='FarmHoldingSizeClassificationCv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('code', models.CharField(max_length=5)),
                ('lower_limit_in_ha', models.DecimalField(decimal_places=2, max_digits=6)),
                ('upper_limit_in_ha', models.DecimalField(decimal_places=2, max_digits=6)),
                ('area_range', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='IdBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=50)),
                ('prefix_code', models.CharField(blank=True, max_length=10, null=True)),
                ('suffix_code', models.CharField(blank=True, max_length=10, null=True)),
                ('last_count', models.IntegerField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordResetRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp', models.IntegerField()),
                ('expiry_time', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                ('notes', models.CharField(max_length=300)),
                ('is_active', models.BooleanField(default=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PositionManUserMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PositionManUserMapTrace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PositionPositionUserMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Position')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('year', models.DateField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('ordinal', models.PositiveSmallIntegerField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_created_by_user', to=settings.AUTH_USER_MODEL)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Crop')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_modifed_by_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SMSTrace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('purpose', models.TextField()),
                ('message', models.TextField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business')),
            ],
        ),
        migrations.CreateModel(
            name='TemporaryRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('password', models.CharField(max_length=30)),
                ('mobile', models.CharField(max_length=13)),
                ('email', models.CharField(blank=True, max_length=30, null=True)),
                ('otp', models.CharField(max_length=30)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business')),
            ],
        ),
        migrations.CreateModel(
            name='UserBankDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(max_length=150)),
                ('branch', models.CharField(max_length=100)),
                ('ifsc_code', models.CharField(max_length=100)),
                ('micr_code', models.CharField(blank=True, max_length=100, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=50, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('bank_passbook_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_bank__pass_book_document_destination)),
                ('post_cheque_number', models.PositiveIntegerField()),
                ('post_cheque_image', models.ImageField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_post_dated_check_image)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_details_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_details_modified_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserHierarchyMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subordinate', models.ManyToManyField(related_name='subordinate_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15, unique=True)),
                ('date_of_joining', models.DateField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('mobile', models.CharField(max_length=13)),
                ('alternate_mobile', models.CharField(blank=True, max_length=13, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField()),
                ('institution_name', models.CharField(blank=True, max_length=100, null=True)),
                ('university_name', models.CharField(blank=True, max_length=100, null=True)),
                ('aadhaar_number', models.CharField(blank=True, max_length=18, null=True)),
                ('aadhaar_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_aadhar_document_destination)),
                ('pan_number', models.CharField(blank=True, max_length=16, null=True)),
                ('pan_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_pan_document_destination)),
                ('driving_licence_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_driving_licence_document_destination)),
                ('agreement_document', models.FileField(blank=True, max_length=1000, null=True, upload_to=instance.models.get_agreement_document_destination)),
                ('prior_experience_in_other_company', models.BooleanField(default=False)),
                ('prior_experience_company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('prior_experience_duration', models.IntegerField(blank=True, null=True)),
                ('latitude', models.CharField(blank=True, max_length=40, null=True)),
                ('longitude', models.CharField(blank=True, max_length=40, null=True)),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_created_by_instance', to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.District')),
                ('educational_qualification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='instance.EducationalQualificationCv')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Gender')),
                ('hobli', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Hobli')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_modifed_by_instance', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.State')),
                ('taluk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Taluk')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileCodeBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix_code', models.CharField(blank=True, max_length=10, null=True)),
                ('suffix_code', models.CharField(blank=True, max_length=10, null=True)),
                ('last_count', models.IntegerField()),
                ('time_created', models.DateTimeField(auto_now_add=True)),
                ('time_modified', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business')),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.CharField(blank=True, max_length=250, null=True)),
                ('ordinal', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='userprofilecodebank',
            name='user_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.UserType'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='user_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.UserType'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Village'),
        ),
        migrations.AddField(
            model_name='userhierarchymap',
            name='subordinate_user_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subordinate_user_type', to='instance.UserType'),
        ),
        migrations.AddField(
            model_name='userhierarchymap',
            name='superior',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userhierarchymap',
            name='superior_user_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.UserType'),
        ),
        migrations.AddField(
            model_name='temporaryregistration',
            name='user_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.UserType'),
        ),
        migrations.AddField(
            model_name='positionmanusermaptrace',
            name='position_user_map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.PositionPositionUserMap'),
        ),
        migrations.AddField(
            model_name='positionmanusermaptrace',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='positionmanusermap',
            name='position_user_map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.PositionPositionUserMap'),
        ),
        migrations.AddField(
            model_name='positionmanusermap',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='farmer',
            name='farm_holding_size_classification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='instance.FarmHoldingSizeClassificationCv'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='farmer_data_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.FarmerDataSource'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='hobli',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Hobli'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='invited_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='farmer_entry_invited_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='farmer',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmer_modified_by_instance', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='farmer',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.State'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='taluk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Taluk'),
        ),
        migrations.AddField(
            model_name='farmer',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='farmer_entry_verified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='farmer',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Village'),
        ),
        migrations.AddField(
            model_name='cropcropgroupmap',
            name='crop_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.CropGroup'),
        ),
        migrations.AddField(
            model_name='business',
            name='business_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.BusinessType'),
        ),
        migrations.AddField(
            model_name='business',
            name='district',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.District'),
        ),
        migrations.AddField(
            model_name='business',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.State'),
        ),
        migrations.AddField(
            model_name='business',
            name='taluk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Taluk'),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Business'),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_office_created_by_instance', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.District'),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='hobli',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Hobli'),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agent_office_modifed_by_instance', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.State'),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='taluk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Taluk'),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agentoffice',
            name='village',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='knowledgebase.Village'),
        ),
        migrations.AddField(
            model_name='agentfarmermap',
            name='farmer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Farmer'),
        ),
        migrations.AddField(
            model_name='agentfarmermap',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Season'),
        ),
        migrations.AddField(
            model_name='afsfarmermap',
            name='farmer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Farmer'),
        ),
        migrations.AddField(
            model_name='afsfarmermap',
            name='officer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='afsfarmermap',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Season'),
        ),
        migrations.AddField(
            model_name='afsclustermap',
            name='cluster',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Cluster'),
        ),
        migrations.AddField(
            model_name='afsclustermap',
            name='field_supervisor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_supervisor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='afsclustermap',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='instance.Season'),
        ),
        migrations.AlterUniqueTogether(
            name='userprofilecodebank',
            unique_together=set([('business',)]),
        ),
        migrations.AlterUniqueTogether(
            name='idbank',
            unique_together=set([('business', 'purpose')]),
        ),
        migrations.AlterUniqueTogether(
            name='agentfarmermap',
            unique_together=set([('season', 'agent', 'farmer')]),
        ),
        migrations.AlterUniqueTogether(
            name='afsfarmermap',
            unique_together=set([('season', 'officer', 'farmer')]),
        ),
        migrations.AlterUniqueTogether(
            name='afsclustermap',
            unique_together=set([('season', 'cluster', 'assit_field_supervisor', 'field_supervisor')]),
        ),
    ]
